<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  
  <parent>
  	<groupId>org.springframework.boot</groupId>
  	<artifactId>spring-boot-starter-parent</artifactId>
  	<version>2.3.0.RELEASE</version>
  </parent>
  
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.self.learnjava</groupId>
  <artifactId>springboot-atguigu</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>springboot-atguigu</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <java.version>1.8</java.version>
  </properties>

  <dependencies>
  	<dependency><!-- mvn dependency:tree 可以使用这个命令看大依赖树 -->
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-web</artifactId>
  	</dependency>
  	
  	<!-- 引入其他的Servlet容器Jetty,因为spring-boot-starter-web默认是依赖tomcat的,如果要用Jetyy,就需要在spring-boot-starter-web里面把tomcat给排除掉
  	 
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-jetty</artifactId>
  	</dependency>
  	
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-undertow</artifactId>
  	</dependency>-->
  	<dependency><!-- JSR303数据校验 -->
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-validation</artifactId>
  	</dependency>
  	<dependency><!-- 导入配置文件处理器,配置文件再进行绑定就会有提示 -->
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-configuration-processor</artifactId>
  		<optional>true</optional>
  	</dependency>
  	<dependency><!-- SpringBoot的单元测试,比Junit好用 -->
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-test</artifactId>
  		<scope>test</scope>
  	</dependency>
  	<dependency><!-- 引入jquery-webjar,在访问的时候需要写jquery-3.5.1.jar包下面的资源名称,比如: -->
  		<groupId>org.webjars</groupId>
  		<artifactId>jquery</artifactId>
  		<version>3.5.1</version>
  	</dependency>
  	<dependency><!-- 引入bootstrap:引入完成要重新mvn clean compile把webjars编译的classpath路径下 -->
	    <groupId>org.webjars</groupId>
	    <artifactId>bootstrap</artifactId>
	    <version>4.5.3</version>
	</dependency>
  	<dependency><!-- 引入thymeleaf模板引擎 -->
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-thymeleaf</artifactId>
  	</dependency>
  	<!-- Spring Boot提供了一个开发阶段非常有用的spring-boot-devtools，能自动检测classpath路径上文件修改并自动重启。 -->
  	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-devtools</artifactId>
	</dependency>
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-jdbc</artifactId>
	</dependency>
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<scope>runtime</scope>
	</dependency>
	<!-- 引入druid数据源 -->
	<!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
	<dependency>
	    <groupId>com.alibaba</groupId>
	    <artifactId>druid</artifactId>
	    <version>1.1.10</version>
	</dependency>
	<dependency>
		<groupId>org.mybatis.spring.boot</groupId>
		<artifactId>mybatis-spring-boot-starter</artifactId>
		<version>2.1.1</version>
	</dependency>
	<!-- SpringBoot整合JPA -->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-data-jpa</artifactId>
	</dependency>
  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <!-- 在打包的时候，因为打包后的Spring Boot应用不会被修改，因此，默认情况下，spring-boot-devtools这个依赖不会被打包进去。
            	但是要注意，使用早期的Spring Boot版本时，需要配置一下才能排除spring-boot-devtools这个依赖： -->
            <configuration>
		        <excludeDevtools>true</excludeDevtools>
		        <excludes>
                    <exclude>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-configuration-processor</artifactId>
                    </exclude>
                </excludes>
		    </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
